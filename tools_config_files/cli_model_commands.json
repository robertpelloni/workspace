{
  "cliModelCommands": {
    "version": "1.1.0",
    "description": "Pre-configured commands for model CLIs (Windows-safe, no insecure defaults)",
    "codex": {
      "models": {
        "gpt-5-codex": {
          "exec": "codex exec --model gpt-5-codex",
          "interactive": "codex --model gpt-5-codex",
          "sandbox": "codex exec --model gpt-5-codex --sandbox workspace-write"
        },
        "gpt-5-codex-low": {
          "exec": "codex exec --model gpt-5-codex -c model_reasoning_effort=low",
          "interactive": "codex --model gpt-5-codex -c model_reasoning_effort=low"
        },
        "gpt-5-codex-medium": {
          "exec": "codex exec --model gpt-5-codex -c model_reasoning_effort=medium",
          "interactive": "codex --model gpt-5-codex -c model_reasoning_effort=medium"
        },
        "gpt-5-codex-high": {
          "exec": "codex exec --model gpt-5-codex -c model_reasoning_effort=high",
          "interactive": "codex --model gpt-5-codex -c model_reasoning_effort=high"
        },
        "gpt-5": {
          "exec": "codex exec --model gpt-5",
          "interactive": "codex --model gpt-5"
        },
        "gpt-4": {
          "exec": "codex exec --model gpt-4",
          "interactive": "codex --model gpt-4"
        },
        "gpt-3.5-turbo": {
          "exec": "codex exec --model gpt-3.5-turbo",
          "interactive": "codex --model gpt-3.5-turbo"
        }
      },
      "commonFlags": {
        "search": "--search",
        "workspace": "-C C:\\\\Users\\\\hyper\\\\fwber",
        "sandbox": "--sandbox workspace-write"
      },
      "profiles": {
        "secure": {
          "description": "No auto-approve; explicit confirmation required",
          "flags": []
        },
        "debug": {
          "description": "Verbose output; safe for diagnostics",
          "flags": [
            "--verbose"
          ]
        }
      }
    },
    "gemini": {
      "models": {
        "gemini-2.5-pro": {
          "exec": "gemini -m gemini-2.5-pro",
          "interactive": "gemini -m gemini-2.5-pro",
          "sandbox": "gemini -m gemini-2.5-pro -s"
        },
        "gemini-2.5-flash": {
          "exec": "gemini -m gemini-2.5-flash",
          "interactive": "gemini -m gemini-2.5-flash",
          "sandbox": "gemini -m gemini-2.5-flash -s"
        }
      },
      "commonFlags": {
        "sandbox": "-s",
        "debug": "-d",
        "memory-usage": "--show-memory-usage"
      },
      "profiles": {
        "secure": {
          "flags": []
        },
        "debug": {
          "flags": [
            "-d"
          ]
        }
      }
    },
    "grok": {
      "models": {
        "grok-4-code": {
          "exec": "grok --api-key ${XAI_API_KEY} -m grok-4-code",
          "interactive": "grok --api-key ${XAI_API_KEY} -m grok-4-code"
        },
        "grok-code-fast-1": {
          "exec": "grok --api-key ${XAI_API_KEY} -m grok-code-fast-1",
          "interactive": "grok --api-key ${XAI_API_KEY} -m grok-code-fast-1"
        }
      },
      "commonFlags": {
        "api-key": "--api-key",
        "model": "-m"
      },
      "note": "Set XAI_API_KEY in environment before use"
    },
    "orchestration": {
      "ai-orchestrator": {
        "basic": "node tools_config_files\\\\ai-orchestrator.js",
        "with-json": "node tools_config_files\\\\ai-orchestrator.js"
      }
    },
    "mcpServers": {
      "serena": {
        "memory": {
          "list": "mcp_serena_list_memories",
          "read": "mcp_serena_read_memory",
          "write": "mcp_serena_write_memory",
          "delete": "mcp_serena_delete_memory"
        },
        "analysis": {
          "symbols": "mcp_serena_get_symbols_overview",
          "find": "mcp_serena_find_symbol",
          "references": "mcp_serena_find_referencing_symbols"
        }
      },
      "codex": {
        "exec": "mcp_codex-mcp-server_codex",
        "ping": "mcp_codex-mcp-server_ping",
        "sessions": "mcp_codex-mcp-server_listSessions"
      },
      "gemini": {
        "ask": "mcp_gemini-mcp-tool_ask-gemini",
        "brainstorm": "mcp_gemini-mcp-tool_brainstorm",
        "ping": "mcp_gemini-mcp-tool_ping"
      },
      "sequential-thinking": {
        "think": "mcp_sequential-thinking_sequentialthinking"
      }
    },
    "modelSelection": {
      "byTask": {
        "implementation": [
          "gpt-5-codex-high",
          "grok-4-code"
        ],
        "architecture": [
          "claude-4.5",
          "gemini-2.5-pro"
        ],
        "analysis": [
          "claude-4.5",
          "gemini-2.5-pro"
        ],
        "creative": [
          "gemini-2.5-flash",
          "claude-4.5"
        ],
        "fast": [
          "gemini-2.5-flash",
          "grok-code-fast-1"
        ],
        "reasoning": [
          "claude-4.5",
          "gemini-2.5-pro"
        ],
        "performance": [
          "cheetah",
          "gpt-5-codex-high"
        ],
        "context": [
          "code-supernova-1-million",
          "claude-4.5"
        ]
      },
      "byPriority": {
        "tier1": [
          "claude-4.5"
        ],
        "tier2": [
          "gpt-5-codex-high",
          "gpt-5-codex-medium",
          "gpt-5-codex-low"
        ],
        "tier3": [
          "cheetah"
        ],
        "tier4": [
          "code-supernova-1-million"
        ],
        "tier5": [
          "gpt-5",
          "gemini-2.5-pro",
          "gemini-2.5-flash",
          "grok-4-code"
        ]
      }
    },
    "usageExamples": {
      "parallelImplementation": [
        "codex exec --model gpt-5-codex-high \"Implement user authentication system\"",
        "grok --api-key ${XAI_API_KEY} -m grok-4-code \"Review and optimize the authentication code\"",
        "node tools_config_files\\\\ai-orchestrator.js"
      ],
      "architectureDesign": [
        "codex exec --model gpt-5-codex-high \"Design microservices architecture\"",
        "gemini -m gemini-2.5-pro \"Analyze scalability requirements\"",
        "node tools_config_files\\\\ai-orchestrator.js"
      ],
      "securityAudit": [
        "codex exec --model gpt-5-codex-high \"Audit security vulnerabilities\"",
        "gemini -m gemini-2.5-pro \"Review security best practices\"",
        "node tools_config_files\\\\ai-orchestrator.js"
      ]
    },
    "envPrecedence": "Environment variables take precedence over placeholders; set variables before invoking commands"
  }
}
