# PowerShell: copy-paste individual lines to run each probe

# 1) Memory server stdout/stderr capture
& "C:\Program Files\nodejs\npx.cmd" -y @modelcontextprotocol/server-memory stdio 1> "$env:TEMP\mem_stdout.txt" 2> "$env:TEMP\mem_stderr.txt"; Get-Content "$env:TEMP\mem_stdout.txt" -First 40; '---'; Get-Content "$env:TEMP\mem_stderr.txt" -First 40

# 2) Sequential-thinking server stdout/stderr capture
& "C:\Program Files\nodejs\npx.cmd" -y @modelcontextprotocol/server-sequential-thinking stdio 1> "$env:TEMP\seq_stdout.txt" 2> "$env:TEMP\seq_stderr.txt"; Get-Content "$env:TEMP\seq_stdout.txt" -First 40; '---'; Get-Content "$env:TEMP\seq_stderr.txt" -First 40

# 3) Minimal stdio sanity target (if available)
& "C:\Program Files\nodejs\npx.cmd" -y @modelcontextprotocol/server-stdio-test stdio 1> "$env:TEMP\stdio_stdout.txt" 2> "$env:TEMP\stdio_stderr.txt"; Get-Content "$env:TEMP\stdio_stdout.txt" -First 40; '---'; Get-Content "$env:TEMP\stdio_stderr.txt" -First 40

# 4) Serena (Python/uv) capture
"C:\Users\hyper\.local\bin\uv.exe" run --directory "C:\Users\hyper\serena" serena start-mcp-server --context codex --project "C:\Users\hyper\fwber" 1> "$env:TEMP\serena_stdout.txt" 2> "$env:TEMP\serena_stderr.txt"; Get-Content "$env:TEMP\serena_stdout.txt" -First 40; '---'; Get-Content "$env:TEMP\serena_stderr.txt" -First 40
